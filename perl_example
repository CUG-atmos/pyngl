I don't have any simple examples you can run right now although 
they would be easy to make, but here's a real world perl example.
You won't be able to run it because it was created as a one-time
script to create monthly averages from a hourly data collected in
daily files. But you can see how things work from it:

First the perl -- make-monthly.pl

-------------------------------------
#!/usr/bin/perl

use Ncl;
Ncl::ncl_initialize();

for my $i (1 .. 12) {
        # this matches one month's worth of files for successive months
        # e.g. Jan 1 is TRUTH-01-01.nc
        #
        my $match = sprintf("TRUTH-%02.2d-??.nc",$i);
        my @files = `ls $match`;
        chomp @files;
        my $filearray = "(/";
        foreach my $file (@files) {

        foreach my $file (@files) {
                $filearray .= "\"$file\",";
        }
        chop $filearray;
        $filearray .= "/)";
        Ncl::ncl_command("filearray = $filearray");
        my $outfile = sprintf("monthly/TRUTH-%02.2d.nc",$i);
        Ncl::ncl_command("outfile = \"$outfile\"");
        Ncl::ncl_command("print(filearray)");
        Ncl::ncl_command("load \"make_monthly.ncl\"");
        Ncl::ncl_command("delete(filearray)");
}

-------------------------------

Now the ncl - make_monthly.ncl

--------------------------------------------- 

t = addfile(filearray(0),"r")

dsizes = dimsizes(t->co2)
; the time dimension becomes unitary
dsizes(0) = 1

;;;;;;;;;;;;;;;;;;;;;
; create the output file now
print(dsizes)
out = addfile(outfile,"c")
filedimdef(out,(/"time","lev","lat","lon"/),dsizes,(/0,0,0,0/))

filevardef(out,"time",typeof(t->time),"time")
timeatts = 0
timeatts@long_name = "time"
timeatts@units = "hours since 1990-1-1 0:0:0"
timeatts@bounds = "time_bounds"
filevarattdef(out,"time",timeatts)
time_bounds = new(2,typeof(t->time))
time_bounds@units = "hours since 1990-1-1 0:0:0"
time_bounds(0) = t->time(0)
filevardef(out,"lev",typeof(t->lev),"lev")
levatts = 0
levatts@long_name = "sigma at layer midpoints"
levatts@positive = "down"
filevarattdef(out,"lev",levatts)
out->lev = (/t->lev/)

filevardef(out,"lat",typeof(t->lat),"lat")
latatts = 0
latatts@long_name = "latitude"
latatts@units = "degrees_north"
filevarattdef(out,"lat",latatts)
out->lat = (/t->lat/)

filevardef(out,"lon",typeof(t->lon),"lon")
lonatts = 0
lonatts@long_name = "longitude"
lonatts@units = "degrees_east"
filevarattdef(out,"lon",lonatts)
out->lon = (/t->lon/)
filevardef(out,"co2","float",(/"time","lev","lat","lon"/))
co2atts = 0
co2atts@long_name = "carbon dioxide"
co2atts@units = "ppm"
co2atts@cell_methods = "time: mean"
filevarattdef(out,"co2",co2atts)
printVarSummary(out)

co2 = t->co2
;printVarSummary(co2)
print("processing " + filearray(0))
mco2 = dim_avg(co2( lev | :,lat | :, lon | :,time | :))

dco2 = new(dimsizes(mco2),"double")
dco2 = mco2
delete (co2)
delete (t)
;printVarSummary(mco2)
;print(mco2(0,0,0:10))
do i = 1,dimsizes(filearray) - 1
        print("processing " + filearray(i))
        t = addfile(filearray(i),"r")
        co2 = t->co2
        dco2 = dco2 + dim_avg(co2( lev | :,lat | :, lon | :,time | :))
        if (i .eq. dimsizes(filearray) - 1) then
                time_bounds(1) = t->time(dimsizes(t->time) - 1)
        end if
;       printVarSummary(dco2)
;       print(dco2(0,0,0:10))
        delete (co2)
        delete (t)
end do
out->time = (time_bounds(0) + time_bounds(1)) / 2
out->time_bounds = time_bounds
dco2 = dco2 / dimsizes(filearray)
print(dco2(23,50,0:10))
;printVarSummary(dco2)
delete(mco2)
out->co2(0,:,:,:) = doubletofloat(dco2)
print(out->co2(0,23,50,0:10))
printVarSummary(out)
delete(dco2)
delete(out)



