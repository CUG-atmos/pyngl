
PyNGL ("pingle") stands for "Python NCL Graphics Library" and is a
Python package for producing publication-quality 2D visualizations.

PyNIO is a Python module that allows read and/or write access to a
variety of data formats (netCDF, GRIB1, HDF4, HDF-EOS2, CCM History
tape) using an interface modelled on netCDF.  This module is part of
PyNGL version 1.0.0.

PyNGL and PyNIO are available with Numeric or Numpy support, and are
distributed as separate packages.  You can install both versions on
the same system, as there will be no clashes.

If you install the Numeric version of PyNGL/PyNIO, then you can
import them with:

import Ngl
import Nio

If you install the numpy version of PyNGL/PyNIO, then you can
import them with:

import PyNGL_numpy.Ngl as Ngl
import PyNGL_numpy.Nio as Nio

These binaries were built with Python 2.4.3, Numeric 24.2, and numpy
0.9.8. This package has not been tested with other versions of these
modules.

The 2D visualizations can be drawn on an X11 window or saved as as
PostScript, PDF, or NCGM file.

Interfaces exist for the rapid display of:

    Contour plots
    XY plots
    World map projections
    Vector plots
    Streamline plots
    Output primitives (lines, markers, polygons, text)

For documentation, see:

  http://www.pyngl.ucar.edu/

Bug reports and feedback are appreciated (see email addresses below).

David Brown, Fred Clare, and Mary Haley
National Center for Atmospheric Research
1850 Table Mesa Drive
Boulder, CO  80305
USA
E-Mail: dbrown@ucar.edu, fred@ucar.edu, haley@ucar.edu

Installation:
-------------

Required: Python 2.4 or higher and Numeric 24.2 or higher for the
Numeric version of PyNGL. For the Numpy version, you need numpy
version 0.9.8.  Earlier or later versions of these packages may work,
but we haven't tested all of them.

Installation is simple:

    python setup.py install

(the second command requires root privileges on many installations).


Examples:
---------

To run a PyNGL example, type:

   pynglex ngl01p

If you've downloaded the numpy version of PyNGL/PyNIO, then
you can run the numpy version of this example with:

   pynglex --numpy ngl01p

Either command will generate a PostScript file called "ngl01p.ps"
containing XY plots.

For a complete list of PyNGL examples, type:

   pynglex -a

